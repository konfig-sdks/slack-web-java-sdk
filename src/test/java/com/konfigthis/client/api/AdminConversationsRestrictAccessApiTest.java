/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AdminconversationsrestrictAccessAddGroupIdpGroupsRequest;
import com.konfigthis.client.model.AdminconversationsrestrictAccessAddGroupIdpGroupsResponse;
import com.konfigthis.client.model.AdminconversationsrestrictAccessAddGroupIdpGroupsdefaultResponse;
import com.konfigthis.client.model.AdminconversationsrestrictAccessListGroupsResponse;
import com.konfigthis.client.model.AdminconversationsrestrictAccessListGroupsdefaultResponse;
import com.konfigthis.client.model.AdminconversationsrestrictAccessRemoveIdpGroupRequest;
import com.konfigthis.client.model.AdminconversationsrestrictAccessRemoveIdpGroupResponse;
import com.konfigthis.client.model.AdminconversationsrestrictAccessRemoveIdpGroupdefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminConversationsRestrictAccessApi
 */
@Disabled
public class AdminConversationsRestrictAccessApiTest {

    private static AdminConversationsRestrictAccessApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AdminConversationsRestrictAccessApi(apiClient);
    }

    /**
     * Add an allowlist of IDP groups for accessing a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addGroupIdpGroupsTest() throws ApiException {
        String channelId = null;
        String groupId = null;
        String token = null;
        String teamId = null;
        AdminconversationsrestrictAccessAddGroupIdpGroupsResponse response = api.addGroupIdpGroups(channelId, groupId, token)
                .teamId(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all IDP Groups linked to a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listGroupsTest() throws ApiException {
        String token = null;
        String channelId = null;
        String teamId = null;
        AdminconversationsrestrictAccessListGroupsResponse response = api.listGroups(token, channelId)
                .teamId(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a linked IDP group linked from a private channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeIdpGroupTest() throws ApiException {
        String channelId = null;
        String groupId = null;
        String teamId = null;
        String token = null;
        AdminconversationsrestrictAccessRemoveIdpGroupResponse response = api.removeIdpGroup(channelId, groupId, teamId, token)
                .execute();
        // TODO: test validations
    }

}
