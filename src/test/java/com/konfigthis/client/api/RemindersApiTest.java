/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.RemindersAddRequest;
import com.konfigthis.client.model.RemindersAddResponse;
import com.konfigthis.client.model.RemindersAdddefaultResponse;
import com.konfigthis.client.model.RemindersCompleteRequest;
import com.konfigthis.client.model.RemindersCompleteResponse;
import com.konfigthis.client.model.RemindersCompletedefaultResponse;
import com.konfigthis.client.model.RemindersDeleteRequest;
import com.konfigthis.client.model.RemindersDeleteResponse;
import com.konfigthis.client.model.RemindersDeletedefaultResponse;
import com.konfigthis.client.model.RemindersInfoResponse;
import com.konfigthis.client.model.RemindersInfodefaultResponse;
import com.konfigthis.client.model.RemindersListResponse;
import com.konfigthis.client.model.RemindersListdefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RemindersApi
 */
@Disabled
public class RemindersApiTest {

    private static RemindersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new RemindersApi(apiClient);
    }

    /**
     * Creates a reminder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTest() throws ApiException {
        String token = null;
        String text = null;
        String time = null;
        String user = null;
        RemindersAddResponse response = api.add(token, text, time)
                .user(user)
                .execute();
        // TODO: test validations
    }

    /**
     * Marks a reminder as complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void completeTest() throws ApiException {
        String token = null;
        String reminder = null;
        RemindersCompleteResponse response = api.complete()
                .token(token)
                .reminder(reminder)
                .execute();
        // TODO: test validations
    }

    /**
     * Deletes a reminder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String token = null;
        String reminder = null;
        RemindersDeleteResponse response = api.delete()
                .token(token)
                .reminder(reminder)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets information about a reminder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void infoTest() throws ApiException {
        String token = null;
        String reminder = null;
        RemindersInfoResponse response = api.info()
                .token(token)
                .reminder(reminder)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists all reminders created by or for a given user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        String token = null;
        RemindersListResponse response = api.list()
                .token(token)
                .execute();
        // TODO: test validations
    }

}
