/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ChatUnfurlRequest
 */
public class ChatUnfurlRequestTest {
    private final ChatUnfurlRequest model = new ChatUnfurlRequest();

    /**
     * Model tests for ChatUnfurlRequest
     */
    @Test
    public void testChatUnfurlRequest() {
        // TODO: test ChatUnfurlRequest
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'ts'
     */
    @Test
    public void tsTest() {
        // TODO: test ts
    }

    /**
     * Test the property 'unfurls'
     */
    @Test
    public void unfurlsTest() {
        // TODO: test unfurls
    }

    /**
     * Test the property 'userAuthMessage'
     */
    @Test
    public void userAuthMessageTest() {
        // TODO: test userAuthMessage
    }

    /**
     * Test the property 'userAuthRequired'
     */
    @Test
    public void userAuthRequiredTest() {
        // TODO: test userAuthRequired
    }

    /**
     * Test the property 'userAuthUrl'
     */
    @Test
    public void userAuthUrlTest() {
        // TODO: test userAuthUrl
    }

}
