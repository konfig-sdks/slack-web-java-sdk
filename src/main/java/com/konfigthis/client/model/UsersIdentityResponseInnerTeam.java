/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UsersIdentityResponseInnerTeam
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UsersIdentityResponseInnerTeam {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_IMAGE102 = "image_102";
  @SerializedName(SERIALIZED_NAME_IMAGE102)
  private String image102;

  public static final String SERIALIZED_NAME_IMAGE132 = "image_132";
  @SerializedName(SERIALIZED_NAME_IMAGE132)
  private String image132;

  public static final String SERIALIZED_NAME_IMAGE230 = "image_230";
  @SerializedName(SERIALIZED_NAME_IMAGE230)
  private String image230;

  public static final String SERIALIZED_NAME_IMAGE34 = "image_34";
  @SerializedName(SERIALIZED_NAME_IMAGE34)
  private String image34;

  public static final String SERIALIZED_NAME_IMAGE44 = "image_44";
  @SerializedName(SERIALIZED_NAME_IMAGE44)
  private String image44;

  public static final String SERIALIZED_NAME_IMAGE68 = "image_68";
  @SerializedName(SERIALIZED_NAME_IMAGE68)
  private String image68;

  public static final String SERIALIZED_NAME_IMAGE88 = "image_88";
  @SerializedName(SERIALIZED_NAME_IMAGE88)
  private String image88;

  public static final String SERIALIZED_NAME_IMAGE_DEFAULT = "image_default";
  @SerializedName(SERIALIZED_NAME_IMAGE_DEFAULT)
  private Boolean imageDefault;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public UsersIdentityResponseInnerTeam() {
  }

  public UsersIdentityResponseInnerTeam id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public UsersIdentityResponseInnerTeam domain(String domain) {
    
    
    
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    
    
    
    this.domain = domain;
  }


  public UsersIdentityResponseInnerTeam image102(String image102) {
    
    
    
    
    this.image102 = image102;
    return this;
  }

   /**
   * Get image102
   * @return image102
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage102() {
    return image102;
  }


  public void setImage102(String image102) {
    
    
    
    this.image102 = image102;
  }


  public UsersIdentityResponseInnerTeam image132(String image132) {
    
    
    
    
    this.image132 = image132;
    return this;
  }

   /**
   * Get image132
   * @return image132
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage132() {
    return image132;
  }


  public void setImage132(String image132) {
    
    
    
    this.image132 = image132;
  }


  public UsersIdentityResponseInnerTeam image230(String image230) {
    
    
    
    
    this.image230 = image230;
    return this;
  }

   /**
   * Get image230
   * @return image230
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage230() {
    return image230;
  }


  public void setImage230(String image230) {
    
    
    
    this.image230 = image230;
  }


  public UsersIdentityResponseInnerTeam image34(String image34) {
    
    
    
    
    this.image34 = image34;
    return this;
  }

   /**
   * Get image34
   * @return image34
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage34() {
    return image34;
  }


  public void setImage34(String image34) {
    
    
    
    this.image34 = image34;
  }


  public UsersIdentityResponseInnerTeam image44(String image44) {
    
    
    
    
    this.image44 = image44;
    return this;
  }

   /**
   * Get image44
   * @return image44
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage44() {
    return image44;
  }


  public void setImage44(String image44) {
    
    
    
    this.image44 = image44;
  }


  public UsersIdentityResponseInnerTeam image68(String image68) {
    
    
    
    
    this.image68 = image68;
    return this;
  }

   /**
   * Get image68
   * @return image68
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage68() {
    return image68;
  }


  public void setImage68(String image68) {
    
    
    
    this.image68 = image68;
  }


  public UsersIdentityResponseInnerTeam image88(String image88) {
    
    
    
    
    this.image88 = image88;
    return this;
  }

   /**
   * Get image88
   * @return image88
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage88() {
    return image88;
  }


  public void setImage88(String image88) {
    
    
    
    this.image88 = image88;
  }


  public UsersIdentityResponseInnerTeam imageDefault(Boolean imageDefault) {
    
    
    
    
    this.imageDefault = imageDefault;
    return this;
  }

   /**
   * Get imageDefault
   * @return imageDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getImageDefault() {
    return imageDefault;
  }


  public void setImageDefault(Boolean imageDefault) {
    
    
    
    this.imageDefault = imageDefault;
  }


  public UsersIdentityResponseInnerTeam name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersIdentityResponseInnerTeam instance itself
   */
  public UsersIdentityResponseInnerTeam putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersIdentityResponseInnerTeam usersIdentityResponseInnerTeam = (UsersIdentityResponseInnerTeam) o;
    return Objects.equals(this.id, usersIdentityResponseInnerTeam.id) &&
        Objects.equals(this.domain, usersIdentityResponseInnerTeam.domain) &&
        Objects.equals(this.image102, usersIdentityResponseInnerTeam.image102) &&
        Objects.equals(this.image132, usersIdentityResponseInnerTeam.image132) &&
        Objects.equals(this.image230, usersIdentityResponseInnerTeam.image230) &&
        Objects.equals(this.image34, usersIdentityResponseInnerTeam.image34) &&
        Objects.equals(this.image44, usersIdentityResponseInnerTeam.image44) &&
        Objects.equals(this.image68, usersIdentityResponseInnerTeam.image68) &&
        Objects.equals(this.image88, usersIdentityResponseInnerTeam.image88) &&
        Objects.equals(this.imageDefault, usersIdentityResponseInnerTeam.imageDefault) &&
        Objects.equals(this.name, usersIdentityResponseInnerTeam.name)&&
        Objects.equals(this.additionalProperties, usersIdentityResponseInnerTeam.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, domain, image102, image132, image230, image34, image44, image68, image88, imageDefault, name, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersIdentityResponseInnerTeam {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    image102: ").append(toIndentedString(image102)).append("\n");
    sb.append("    image132: ").append(toIndentedString(image132)).append("\n");
    sb.append("    image230: ").append(toIndentedString(image230)).append("\n");
    sb.append("    image34: ").append(toIndentedString(image34)).append("\n");
    sb.append("    image44: ").append(toIndentedString(image44)).append("\n");
    sb.append("    image68: ").append(toIndentedString(image68)).append("\n");
    sb.append("    image88: ").append(toIndentedString(image88)).append("\n");
    sb.append("    imageDefault: ").append(toIndentedString(imageDefault)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("domain");
    openapiFields.add("image_102");
    openapiFields.add("image_132");
    openapiFields.add("image_230");
    openapiFields.add("image_34");
    openapiFields.add("image_44");
    openapiFields.add("image_68");
    openapiFields.add("image_88");
    openapiFields.add("image_default");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsersIdentityResponseInnerTeam
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsersIdentityResponseInnerTeam.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersIdentityResponseInnerTeam is not found in the empty JSON string", UsersIdentityResponseInnerTeam.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UsersIdentityResponseInnerTeam.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("image_102") != null && !jsonObj.get("image_102").isJsonNull()) && !jsonObj.get("image_102").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_102` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_102").toString()));
      }
      if ((jsonObj.get("image_132") != null && !jsonObj.get("image_132").isJsonNull()) && !jsonObj.get("image_132").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_132` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_132").toString()));
      }
      if ((jsonObj.get("image_230") != null && !jsonObj.get("image_230").isJsonNull()) && !jsonObj.get("image_230").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_230` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_230").toString()));
      }
      if ((jsonObj.get("image_34") != null && !jsonObj.get("image_34").isJsonNull()) && !jsonObj.get("image_34").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_34` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_34").toString()));
      }
      if ((jsonObj.get("image_44") != null && !jsonObj.get("image_44").isJsonNull()) && !jsonObj.get("image_44").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_44` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_44").toString()));
      }
      if ((jsonObj.get("image_68") != null && !jsonObj.get("image_68").isJsonNull()) && !jsonObj.get("image_68").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_68` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_68").toString()));
      }
      if ((jsonObj.get("image_88") != null && !jsonObj.get("image_88").isJsonNull()) && !jsonObj.get("image_88").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_88` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_88").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersIdentityResponseInnerTeam.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersIdentityResponseInnerTeam' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersIdentityResponseInnerTeam> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersIdentityResponseInnerTeam.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersIdentityResponseInnerTeam>() {
           @Override
           public void write(JsonWriter out, UsersIdentityResponseInnerTeam value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersIdentityResponseInnerTeam read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UsersIdentityResponseInnerTeam instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsersIdentityResponseInnerTeam given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsersIdentityResponseInnerTeam
  * @throws IOException if the JSON string is invalid with respect to UsersIdentityResponseInnerTeam
  */
  public static UsersIdentityResponseInnerTeam fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersIdentityResponseInnerTeam.class);
  }

 /**
  * Convert an instance of UsersIdentityResponseInnerTeam to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

