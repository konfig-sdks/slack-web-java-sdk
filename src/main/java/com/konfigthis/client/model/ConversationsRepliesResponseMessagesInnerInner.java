/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ConversationsRepliesResponseMessagesInnerInnerUserProfile;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ConversationsRepliesResponseMessagesInnerInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ConversationsRepliesResponseMessagesInnerInner {
  public static final String SERIALIZED_NAME_LAST_READ = "last_read";
  @SerializedName(SERIALIZED_NAME_LAST_READ)
  private String lastRead;

  public static final String SERIALIZED_NAME_LATEST_REPLY = "latest_reply";
  @SerializedName(SERIALIZED_NAME_LATEST_REPLY)
  private String latestReply;

  public static final String SERIALIZED_NAME_REPLY_COUNT = "reply_count";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_REPLY_USERS = "reply_users";
  @SerializedName(SERIALIZED_NAME_REPLY_USERS)
  private Set<String> replyUsers = null;

  public static final String SERIALIZED_NAME_REPLY_USERS_COUNT = "reply_users_count";
  @SerializedName(SERIALIZED_NAME_REPLY_USERS_COUNT)
  private Integer replyUsersCount;

  public static final String SERIALIZED_NAME_SOURCE_TEAM = "source_team";
  @SerializedName(SERIALIZED_NAME_SOURCE_TEAM)
  private String sourceTeam;

  public static final String SERIALIZED_NAME_SUBSCRIBED = "subscribed";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBED)
  private Boolean subscribed;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_THREAD_TS = "thread_ts";
  @SerializedName(SERIALIZED_NAME_THREAD_TS)
  private String threadTs;

  public static final String SERIALIZED_NAME_TS = "ts";
  @SerializedName(SERIALIZED_NAME_TS)
  private String ts;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNREAD_COUNT = "unread_count";
  @SerializedName(SERIALIZED_NAME_UNREAD_COUNT)
  private Integer unreadCount;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_USER_PROFILE = "user_profile";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE)
  private ConversationsRepliesResponseMessagesInnerInnerUserProfile userProfile;

  public static final String SERIALIZED_NAME_USER_TEAM = "user_team";
  @SerializedName(SERIALIZED_NAME_USER_TEAM)
  private String userTeam;

  public static final String SERIALIZED_NAME_IS_STARRED = "is_starred";
  @SerializedName(SERIALIZED_NAME_IS_STARRED)
  private Boolean isStarred;

  public static final String SERIALIZED_NAME_PARENT_USER_ID = "parent_user_id";
  @SerializedName(SERIALIZED_NAME_PARENT_USER_ID)
  private String parentUserId;

  public ConversationsRepliesResponseMessagesInnerInner() {
  }

  public ConversationsRepliesResponseMessagesInnerInner lastRead(String lastRead) {
    
    
    
    
    this.lastRead = lastRead;
    return this;
  }

   /**
   * Get lastRead
   * @return lastRead
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastRead() {
    return lastRead;
  }


  public void setLastRead(String lastRead) {
    
    
    
    this.lastRead = lastRead;
  }


  public ConversationsRepliesResponseMessagesInnerInner latestReply(String latestReply) {
    
    
    
    
    this.latestReply = latestReply;
    return this;
  }

   /**
   * Get latestReply
   * @return latestReply
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLatestReply() {
    return latestReply;
  }


  public void setLatestReply(String latestReply) {
    
    
    
    this.latestReply = latestReply;
  }


  public ConversationsRepliesResponseMessagesInnerInner replyCount(Integer replyCount) {
    
    
    
    
    this.replyCount = replyCount;
    return this;
  }

   /**
   * Get replyCount
   * @return replyCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReplyCount() {
    return replyCount;
  }


  public void setReplyCount(Integer replyCount) {
    
    
    
    this.replyCount = replyCount;
  }


  public ConversationsRepliesResponseMessagesInnerInner replyUsers(Set<String> replyUsers) {
    
    
    
    
    this.replyUsers = replyUsers;
    return this;
  }

  public ConversationsRepliesResponseMessagesInnerInner addReplyUsersItem(String replyUsersItem) {
    if (this.replyUsers == null) {
      this.replyUsers = new LinkedHashSet<>();
    }
    this.replyUsers.add(replyUsersItem);
    return this;
  }

   /**
   * Get replyUsers
   * @return replyUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<String> getReplyUsers() {
    return replyUsers;
  }


  public void setReplyUsers(Set<String> replyUsers) {
    
    
    
    this.replyUsers = replyUsers;
  }


  public ConversationsRepliesResponseMessagesInnerInner replyUsersCount(Integer replyUsersCount) {
    
    
    
    
    this.replyUsersCount = replyUsersCount;
    return this;
  }

   /**
   * Get replyUsersCount
   * @return replyUsersCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReplyUsersCount() {
    return replyUsersCount;
  }


  public void setReplyUsersCount(Integer replyUsersCount) {
    
    
    
    this.replyUsersCount = replyUsersCount;
  }


  public ConversationsRepliesResponseMessagesInnerInner sourceTeam(String sourceTeam) {
    
    
    
    
    this.sourceTeam = sourceTeam;
    return this;
  }

   /**
   * Get sourceTeam
   * @return sourceTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSourceTeam() {
    return sourceTeam;
  }


  public void setSourceTeam(String sourceTeam) {
    
    
    
    this.sourceTeam = sourceTeam;
  }


  public ConversationsRepliesResponseMessagesInnerInner subscribed(Boolean subscribed) {
    
    
    
    
    this.subscribed = subscribed;
    return this;
  }

   /**
   * Get subscribed
   * @return subscribed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSubscribed() {
    return subscribed;
  }


  public void setSubscribed(Boolean subscribed) {
    
    
    
    this.subscribed = subscribed;
  }


  public ConversationsRepliesResponseMessagesInnerInner team(String team) {
    
    
    
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTeam() {
    return team;
  }


  public void setTeam(String team) {
    
    
    
    this.team = team;
  }


  public ConversationsRepliesResponseMessagesInnerInner text(String text) {
    
    
    
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    
    
    
    this.text = text;
  }


  public ConversationsRepliesResponseMessagesInnerInner threadTs(String threadTs) {
    
    
    
    
    this.threadTs = threadTs;
    return this;
  }

   /**
   * Get threadTs
   * @return threadTs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getThreadTs() {
    return threadTs;
  }


  public void setThreadTs(String threadTs) {
    
    
    
    this.threadTs = threadTs;
  }


  public ConversationsRepliesResponseMessagesInnerInner ts(String ts) {
    
    
    
    
    this.ts = ts;
    return this;
  }

   /**
   * Get ts
   * @return ts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTs() {
    return ts;
  }


  public void setTs(String ts) {
    
    
    
    this.ts = ts;
  }


  public ConversationsRepliesResponseMessagesInnerInner type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public ConversationsRepliesResponseMessagesInnerInner unreadCount(Integer unreadCount) {
    
    
    
    
    this.unreadCount = unreadCount;
    return this;
  }

   /**
   * Get unreadCount
   * @return unreadCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnreadCount() {
    return unreadCount;
  }


  public void setUnreadCount(Integer unreadCount) {
    
    
    
    this.unreadCount = unreadCount;
  }


  public ConversationsRepliesResponseMessagesInnerInner user(String user) {
    
    
    
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    
    
    
    this.user = user;
  }


  public ConversationsRepliesResponseMessagesInnerInner userProfile(ConversationsRepliesResponseMessagesInnerInnerUserProfile userProfile) {
    
    
    
    
    this.userProfile = userProfile;
    return this;
  }

   /**
   * Get userProfile
   * @return userProfile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConversationsRepliesResponseMessagesInnerInnerUserProfile getUserProfile() {
    return userProfile;
  }


  public void setUserProfile(ConversationsRepliesResponseMessagesInnerInnerUserProfile userProfile) {
    
    
    
    this.userProfile = userProfile;
  }


  public ConversationsRepliesResponseMessagesInnerInner userTeam(String userTeam) {
    
    
    
    
    this.userTeam = userTeam;
    return this;
  }

   /**
   * Get userTeam
   * @return userTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserTeam() {
    return userTeam;
  }


  public void setUserTeam(String userTeam) {
    
    
    
    this.userTeam = userTeam;
  }


  public ConversationsRepliesResponseMessagesInnerInner isStarred(Boolean isStarred) {
    
    
    
    
    this.isStarred = isStarred;
    return this;
  }

   /**
   * Get isStarred
   * @return isStarred
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsStarred() {
    return isStarred;
  }


  public void setIsStarred(Boolean isStarred) {
    
    
    
    this.isStarred = isStarred;
  }


  public ConversationsRepliesResponseMessagesInnerInner parentUserId(String parentUserId) {
    
    
    
    
    this.parentUserId = parentUserId;
    return this;
  }

   /**
   * Get parentUserId
   * @return parentUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParentUserId() {
    return parentUserId;
  }


  public void setParentUserId(String parentUserId) {
    
    
    
    this.parentUserId = parentUserId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ConversationsRepliesResponseMessagesInnerInner instance itself
   */
  public ConversationsRepliesResponseMessagesInnerInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationsRepliesResponseMessagesInnerInner conversationsRepliesResponseMessagesInnerInner = (ConversationsRepliesResponseMessagesInnerInner) o;
    return Objects.equals(this.lastRead, conversationsRepliesResponseMessagesInnerInner.lastRead) &&
        Objects.equals(this.latestReply, conversationsRepliesResponseMessagesInnerInner.latestReply) &&
        Objects.equals(this.replyCount, conversationsRepliesResponseMessagesInnerInner.replyCount) &&
        Objects.equals(this.replyUsers, conversationsRepliesResponseMessagesInnerInner.replyUsers) &&
        Objects.equals(this.replyUsersCount, conversationsRepliesResponseMessagesInnerInner.replyUsersCount) &&
        Objects.equals(this.sourceTeam, conversationsRepliesResponseMessagesInnerInner.sourceTeam) &&
        Objects.equals(this.subscribed, conversationsRepliesResponseMessagesInnerInner.subscribed) &&
        Objects.equals(this.team, conversationsRepliesResponseMessagesInnerInner.team) &&
        Objects.equals(this.text, conversationsRepliesResponseMessagesInnerInner.text) &&
        Objects.equals(this.threadTs, conversationsRepliesResponseMessagesInnerInner.threadTs) &&
        Objects.equals(this.ts, conversationsRepliesResponseMessagesInnerInner.ts) &&
        Objects.equals(this.type, conversationsRepliesResponseMessagesInnerInner.type) &&
        Objects.equals(this.unreadCount, conversationsRepliesResponseMessagesInnerInner.unreadCount) &&
        Objects.equals(this.user, conversationsRepliesResponseMessagesInnerInner.user) &&
        Objects.equals(this.userProfile, conversationsRepliesResponseMessagesInnerInner.userProfile) &&
        Objects.equals(this.userTeam, conversationsRepliesResponseMessagesInnerInner.userTeam) &&
        Objects.equals(this.isStarred, conversationsRepliesResponseMessagesInnerInner.isStarred) &&
        Objects.equals(this.parentUserId, conversationsRepliesResponseMessagesInnerInner.parentUserId)&&
        Objects.equals(this.additionalProperties, conversationsRepliesResponseMessagesInnerInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastRead, latestReply, replyCount, replyUsers, replyUsersCount, sourceTeam, subscribed, team, text, threadTs, ts, type, unreadCount, user, userProfile, userTeam, isStarred, parentUserId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsRepliesResponseMessagesInnerInner {\n");
    sb.append("    lastRead: ").append(toIndentedString(lastRead)).append("\n");
    sb.append("    latestReply: ").append(toIndentedString(latestReply)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    replyUsers: ").append(toIndentedString(replyUsers)).append("\n");
    sb.append("    replyUsersCount: ").append(toIndentedString(replyUsersCount)).append("\n");
    sb.append("    sourceTeam: ").append(toIndentedString(sourceTeam)).append("\n");
    sb.append("    subscribed: ").append(toIndentedString(subscribed)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    threadTs: ").append(toIndentedString(threadTs)).append("\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unreadCount: ").append(toIndentedString(unreadCount)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userProfile: ").append(toIndentedString(userProfile)).append("\n");
    sb.append("    userTeam: ").append(toIndentedString(userTeam)).append("\n");
    sb.append("    isStarred: ").append(toIndentedString(isStarred)).append("\n");
    sb.append("    parentUserId: ").append(toIndentedString(parentUserId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("last_read");
    openapiFields.add("latest_reply");
    openapiFields.add("reply_count");
    openapiFields.add("reply_users");
    openapiFields.add("reply_users_count");
    openapiFields.add("source_team");
    openapiFields.add("subscribed");
    openapiFields.add("team");
    openapiFields.add("text");
    openapiFields.add("thread_ts");
    openapiFields.add("ts");
    openapiFields.add("type");
    openapiFields.add("unread_count");
    openapiFields.add("user");
    openapiFields.add("user_profile");
    openapiFields.add("user_team");
    openapiFields.add("is_starred");
    openapiFields.add("parent_user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("text");
    openapiRequiredFields.add("thread_ts");
    openapiRequiredFields.add("ts");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("user");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationsRepliesResponseMessagesInnerInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ConversationsRepliesResponseMessagesInnerInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationsRepliesResponseMessagesInnerInner is not found in the empty JSON string", ConversationsRepliesResponseMessagesInnerInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ConversationsRepliesResponseMessagesInnerInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("last_read") != null && !jsonObj.get("last_read").isJsonNull()) && !jsonObj.get("last_read").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_read` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_read").toString()));
      }
      if ((jsonObj.get("latest_reply") != null && !jsonObj.get("latest_reply").isJsonNull()) && !jsonObj.get("latest_reply").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latest_reply` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latest_reply").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("reply_users") != null && !jsonObj.get("reply_users").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reply_users` to be an array in the JSON string but got `%s`", jsonObj.get("reply_users").toString()));
      }
      if ((jsonObj.get("source_team") != null && !jsonObj.get("source_team").isJsonNull()) && !jsonObj.get("source_team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_team").toString()));
      }
      if ((jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) && !jsonObj.get("team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("team").toString()));
      }
      if (!jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (!jsonObj.get("thread_ts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thread_ts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thread_ts").toString()));
      }
      if (!jsonObj.get("ts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ts").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (!jsonObj.get("user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user").toString()));
      }
      // validate the optional field `user_profile`
      if (jsonObj.get("user_profile") != null && !jsonObj.get("user_profile").isJsonNull()) {
        ConversationsRepliesResponseMessagesInnerInnerUserProfile.validateJsonObject(jsonObj.getAsJsonObject("user_profile"));
      }
      if ((jsonObj.get("user_team") != null && !jsonObj.get("user_team").isJsonNull()) && !jsonObj.get("user_team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_team").toString()));
      }
      if ((jsonObj.get("parent_user_id") != null && !jsonObj.get("parent_user_id").isJsonNull()) && !jsonObj.get("parent_user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_user_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationsRepliesResponseMessagesInnerInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationsRepliesResponseMessagesInnerInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationsRepliesResponseMessagesInnerInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationsRepliesResponseMessagesInnerInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationsRepliesResponseMessagesInnerInner>() {
           @Override
           public void write(JsonWriter out, ConversationsRepliesResponseMessagesInnerInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationsRepliesResponseMessagesInnerInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ConversationsRepliesResponseMessagesInnerInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationsRepliesResponseMessagesInnerInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationsRepliesResponseMessagesInnerInner
  * @throws IOException if the JSON string is invalid with respect to ConversationsRepliesResponseMessagesInnerInner
  */
  public static ConversationsRepliesResponseMessagesInnerInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationsRepliesResponseMessagesInnerInner.class);
  }

 /**
  * Convert an instance of ConversationsRepliesResponseMessagesInnerInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

