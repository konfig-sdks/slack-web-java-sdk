/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ObjsFileShares;
import com.konfigthis.client.model.ReactionObject;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FileObjectProperty
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FileObjectProperty {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CHANNELS = "channels";
  @SerializedName(SERIALIZED_NAME_CHANNELS)
  private Set<String> channels = null;

  public static final String SERIALIZED_NAME_COMMENTS_COUNT = "comments_count";
  @SerializedName(SERIALIZED_NAME_COMMENTS_COUNT)
  private Integer commentsCount;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private Integer created;

  public static final String SERIALIZED_NAME_DATE_DELETE = "date_delete";
  @SerializedName(SERIALIZED_NAME_DATE_DELETE)
  private Integer dateDelete;

  public static final String SERIALIZED_NAME_DISPLAY_AS_BOT = "display_as_bot";
  @SerializedName(SERIALIZED_NAME_DISPLAY_AS_BOT)
  private Boolean displayAsBot;

  public static final String SERIALIZED_NAME_EDITABLE = "editable";
  @SerializedName(SERIALIZED_NAME_EDITABLE)
  private Boolean editable;

  public static final String SERIALIZED_NAME_EDITOR = "editor";
  @SerializedName(SERIALIZED_NAME_EDITOR)
  private String editor;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_EXTERNAL_TYPE = "external_type";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_TYPE)
  private String externalType;

  public static final String SERIALIZED_NAME_EXTERNAL_URL = "external_url";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_URL)
  private URI externalUrl;

  public static final String SERIALIZED_NAME_FILETYPE = "filetype";
  @SerializedName(SERIALIZED_NAME_FILETYPE)
  private String filetype;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private Set<String> groups = null;

  public static final String SERIALIZED_NAME_HAS_RICH_PREVIEW = "has_rich_preview";
  @SerializedName(SERIALIZED_NAME_HAS_RICH_PREVIEW)
  private Boolean hasRichPreview;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_EXIF_ROTATION = "image_exif_rotation";
  @SerializedName(SERIALIZED_NAME_IMAGE_EXIF_ROTATION)
  private Integer imageExifRotation;

  public static final String SERIALIZED_NAME_IMS = "ims";
  @SerializedName(SERIALIZED_NAME_IMS)
  private Set<String> ims = null;

  public static final String SERIALIZED_NAME_IS_EXTERNAL = "is_external";
  @SerializedName(SERIALIZED_NAME_IS_EXTERNAL)
  private Boolean isExternal;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "is_public";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_IS_STARRED = "is_starred";
  @SerializedName(SERIALIZED_NAME_IS_STARRED)
  private Boolean isStarred;

  public static final String SERIALIZED_NAME_IS_TOMBSTONED = "is_tombstoned";
  @SerializedName(SERIALIZED_NAME_IS_TOMBSTONED)
  private Boolean isTombstoned;

  public static final String SERIALIZED_NAME_LAST_EDITOR = "last_editor";
  @SerializedName(SERIALIZED_NAME_LAST_EDITOR)
  private String lastEditor;

  public static final String SERIALIZED_NAME_MIMETYPE = "mimetype";
  @SerializedName(SERIALIZED_NAME_MIMETYPE)
  private String mimetype;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NON_OWNER_EDITABLE = "non_owner_editable";
  @SerializedName(SERIALIZED_NAME_NON_OWNER_EDITABLE)
  private Boolean nonOwnerEditable;

  public static final String SERIALIZED_NAME_NUM_STARS = "num_stars";
  @SerializedName(SERIALIZED_NAME_NUM_STARS)
  private Integer numStars;

  public static final String SERIALIZED_NAME_ORIGINAL_H = "original_h";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_H)
  private Integer originalH;

  public static final String SERIALIZED_NAME_ORIGINAL_W = "original_w";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_W)
  private Integer originalW;

  public static final String SERIALIZED_NAME_PERMALINK = "permalink";
  @SerializedName(SERIALIZED_NAME_PERMALINK)
  private URI permalink;

  public static final String SERIALIZED_NAME_PERMALINK_PUBLIC = "permalink_public";
  @SerializedName(SERIALIZED_NAME_PERMALINK_PUBLIC)
  private URI permalinkPublic;

  public static final String SERIALIZED_NAME_PINNED_INFO = "pinned_info";
  @SerializedName(SERIALIZED_NAME_PINNED_INFO)
  private Object pinnedInfo;

  public static final String SERIALIZED_NAME_PINNED_TO = "pinned_to";
  @SerializedName(SERIALIZED_NAME_PINNED_TO)
  private List<String> pinnedTo = null;

  public static final String SERIALIZED_NAME_PRETTY_TYPE = "pretty_type";
  @SerializedName(SERIALIZED_NAME_PRETTY_TYPE)
  private String prettyType;

  public static final String SERIALIZED_NAME_PREVIEW = "preview";
  @SerializedName(SERIALIZED_NAME_PREVIEW)
  private String preview;

  public static final String SERIALIZED_NAME_PUBLIC_URL_SHARED = "public_url_shared";
  @SerializedName(SERIALIZED_NAME_PUBLIC_URL_SHARED)
  private Boolean publicUrlShared;

  public static final String SERIALIZED_NAME_REACTIONS = "reactions";
  @SerializedName(SERIALIZED_NAME_REACTIONS)
  private List<ReactionObject> reactions = null;

  public static final String SERIALIZED_NAME_SHARES = "shares";
  @SerializedName(SERIALIZED_NAME_SHARES)
  private ObjsFileShares shares;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size;

  public static final String SERIALIZED_NAME_SOURCE_TEAM = "source_team";
  @SerializedName(SERIALIZED_NAME_SOURCE_TEAM)
  private String sourceTeam;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_THUMB1024 = "thumb_1024";
  @SerializedName(SERIALIZED_NAME_THUMB1024)
  private URI thumb1024;

  public static final String SERIALIZED_NAME_THUMB1024_H = "thumb_1024_h";
  @SerializedName(SERIALIZED_NAME_THUMB1024_H)
  private Integer thumb1024H;

  public static final String SERIALIZED_NAME_THUMB1024_W = "thumb_1024_w";
  @SerializedName(SERIALIZED_NAME_THUMB1024_W)
  private Integer thumb1024W;

  public static final String SERIALIZED_NAME_THUMB160 = "thumb_160";
  @SerializedName(SERIALIZED_NAME_THUMB160)
  private URI thumb160;

  public static final String SERIALIZED_NAME_THUMB360 = "thumb_360";
  @SerializedName(SERIALIZED_NAME_THUMB360)
  private URI thumb360;

  public static final String SERIALIZED_NAME_THUMB360_H = "thumb_360_h";
  @SerializedName(SERIALIZED_NAME_THUMB360_H)
  private Integer thumb360H;

  public static final String SERIALIZED_NAME_THUMB360_W = "thumb_360_w";
  @SerializedName(SERIALIZED_NAME_THUMB360_W)
  private Integer thumb360W;

  public static final String SERIALIZED_NAME_THUMB480 = "thumb_480";
  @SerializedName(SERIALIZED_NAME_THUMB480)
  private URI thumb480;

  public static final String SERIALIZED_NAME_THUMB480_H = "thumb_480_h";
  @SerializedName(SERIALIZED_NAME_THUMB480_H)
  private Integer thumb480H;

  public static final String SERIALIZED_NAME_THUMB480_W = "thumb_480_w";
  @SerializedName(SERIALIZED_NAME_THUMB480_W)
  private Integer thumb480W;

  public static final String SERIALIZED_NAME_THUMB64 = "thumb_64";
  @SerializedName(SERIALIZED_NAME_THUMB64)
  private URI thumb64;

  public static final String SERIALIZED_NAME_THUMB720 = "thumb_720";
  @SerializedName(SERIALIZED_NAME_THUMB720)
  private URI thumb720;

  public static final String SERIALIZED_NAME_THUMB720_H = "thumb_720_h";
  @SerializedName(SERIALIZED_NAME_THUMB720_H)
  private Integer thumb720H;

  public static final String SERIALIZED_NAME_THUMB720_W = "thumb_720_w";
  @SerializedName(SERIALIZED_NAME_THUMB720_W)
  private Integer thumb720W;

  public static final String SERIALIZED_NAME_THUMB80 = "thumb_80";
  @SerializedName(SERIALIZED_NAME_THUMB80)
  private URI thumb80;

  public static final String SERIALIZED_NAME_THUMB800 = "thumb_800";
  @SerializedName(SERIALIZED_NAME_THUMB800)
  private URI thumb800;

  public static final String SERIALIZED_NAME_THUMB800_H = "thumb_800_h";
  @SerializedName(SERIALIZED_NAME_THUMB800_H)
  private Integer thumb800H;

  public static final String SERIALIZED_NAME_THUMB800_W = "thumb_800_w";
  @SerializedName(SERIALIZED_NAME_THUMB800_W)
  private Integer thumb800W;

  public static final String SERIALIZED_NAME_THUMB960 = "thumb_960";
  @SerializedName(SERIALIZED_NAME_THUMB960)
  private URI thumb960;

  public static final String SERIALIZED_NAME_THUMB960_H = "thumb_960_h";
  @SerializedName(SERIALIZED_NAME_THUMB960_H)
  private Integer thumb960H;

  public static final String SERIALIZED_NAME_THUMB960_W = "thumb_960_w";
  @SerializedName(SERIALIZED_NAME_THUMB960_W)
  private Integer thumb960W;

  public static final String SERIALIZED_NAME_THUMB_TINY = "thumb_tiny";
  @SerializedName(SERIALIZED_NAME_THUMB_TINY)
  private String thumbTiny;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private Integer timestamp;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private Integer updated;

  public static final String SERIALIZED_NAME_URL_PRIVATE = "url_private";
  @SerializedName(SERIALIZED_NAME_URL_PRIVATE)
  private URI urlPrivate;

  public static final String SERIALIZED_NAME_URL_PRIVATE_DOWNLOAD = "url_private_download";
  @SerializedName(SERIALIZED_NAME_URL_PRIVATE_DOWNLOAD)
  private URI urlPrivateDownload;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_USER_TEAM = "user_team";
  @SerializedName(SERIALIZED_NAME_USER_TEAM)
  private String userTeam;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public FileObjectProperty() {
  }

  public FileObjectProperty title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public FileObjectProperty channels(Set<String> channels) {
    
    
    
    
    this.channels = channels;
    return this;
  }

  public FileObjectProperty addChannelsItem(String channelsItem) {
    if (this.channels == null) {
      this.channels = new LinkedHashSet<>();
    }
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * Get channels
   * @return channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<String> getChannels() {
    return channels;
  }


  public void setChannels(Set<String> channels) {
    
    
    
    this.channels = channels;
  }


  public FileObjectProperty commentsCount(Integer commentsCount) {
    
    
    
    
    this.commentsCount = commentsCount;
    return this;
  }

   /**
   * Get commentsCount
   * @return commentsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCommentsCount() {
    return commentsCount;
  }


  public void setCommentsCount(Integer commentsCount) {
    
    
    
    this.commentsCount = commentsCount;
  }


  public FileObjectProperty created(Integer created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreated() {
    return created;
  }


  public void setCreated(Integer created) {
    
    
    
    this.created = created;
  }


  public FileObjectProperty dateDelete(Integer dateDelete) {
    
    
    
    
    this.dateDelete = dateDelete;
    return this;
  }

   /**
   * Get dateDelete
   * @return dateDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDateDelete() {
    return dateDelete;
  }


  public void setDateDelete(Integer dateDelete) {
    
    
    
    this.dateDelete = dateDelete;
  }


  public FileObjectProperty displayAsBot(Boolean displayAsBot) {
    
    
    
    
    this.displayAsBot = displayAsBot;
    return this;
  }

   /**
   * Get displayAsBot
   * @return displayAsBot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisplayAsBot() {
    return displayAsBot;
  }


  public void setDisplayAsBot(Boolean displayAsBot) {
    
    
    
    this.displayAsBot = displayAsBot;
  }


  public FileObjectProperty editable(Boolean editable) {
    
    
    
    
    this.editable = editable;
    return this;
  }

   /**
   * Get editable
   * @return editable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEditable() {
    return editable;
  }


  public void setEditable(Boolean editable) {
    
    
    
    this.editable = editable;
  }


  public FileObjectProperty editor(String editor) {
    
    
    
    
    this.editor = editor;
    return this;
  }

   /**
   * Get editor
   * @return editor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEditor() {
    return editor;
  }


  public void setEditor(String editor) {
    
    
    
    this.editor = editor;
  }


  public FileObjectProperty externalId(String externalId) {
    
    
    
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    
    
    
    this.externalId = externalId;
  }


  public FileObjectProperty externalType(String externalType) {
    
    
    
    
    this.externalType = externalType;
    return this;
  }

   /**
   * Get externalType
   * @return externalType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalType() {
    return externalType;
  }


  public void setExternalType(String externalType) {
    
    
    
    this.externalType = externalType;
  }


  public FileObjectProperty externalUrl(URI externalUrl) {
    
    
    
    
    this.externalUrl = externalUrl;
    return this;
  }

   /**
   * Get externalUrl
   * @return externalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getExternalUrl() {
    return externalUrl;
  }


  public void setExternalUrl(URI externalUrl) {
    
    
    
    this.externalUrl = externalUrl;
  }


  public FileObjectProperty filetype(String filetype) {
    
    
    
    
    this.filetype = filetype;
    return this;
  }

   /**
   * Get filetype
   * @return filetype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFiletype() {
    return filetype;
  }


  public void setFiletype(String filetype) {
    
    
    
    this.filetype = filetype;
  }


  public FileObjectProperty groups(Set<String> groups) {
    
    
    
    
    this.groups = groups;
    return this;
  }

  public FileObjectProperty addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new LinkedHashSet<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<String> getGroups() {
    return groups;
  }


  public void setGroups(Set<String> groups) {
    
    
    
    this.groups = groups;
  }


  public FileObjectProperty hasRichPreview(Boolean hasRichPreview) {
    
    
    
    
    this.hasRichPreview = hasRichPreview;
    return this;
  }

   /**
   * Get hasRichPreview
   * @return hasRichPreview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasRichPreview() {
    return hasRichPreview;
  }


  public void setHasRichPreview(Boolean hasRichPreview) {
    
    
    
    this.hasRichPreview = hasRichPreview;
  }


  public FileObjectProperty id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public FileObjectProperty imageExifRotation(Integer imageExifRotation) {
    
    
    
    
    this.imageExifRotation = imageExifRotation;
    return this;
  }

   /**
   * Get imageExifRotation
   * @return imageExifRotation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getImageExifRotation() {
    return imageExifRotation;
  }


  public void setImageExifRotation(Integer imageExifRotation) {
    
    
    
    this.imageExifRotation = imageExifRotation;
  }


  public FileObjectProperty ims(Set<String> ims) {
    
    
    
    
    this.ims = ims;
    return this;
  }

  public FileObjectProperty addImsItem(String imsItem) {
    if (this.ims == null) {
      this.ims = new LinkedHashSet<>();
    }
    this.ims.add(imsItem);
    return this;
  }

   /**
   * Get ims
   * @return ims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<String> getIms() {
    return ims;
  }


  public void setIms(Set<String> ims) {
    
    
    
    this.ims = ims;
  }


  public FileObjectProperty isExternal(Boolean isExternal) {
    
    
    
    
    this.isExternal = isExternal;
    return this;
  }

   /**
   * Get isExternal
   * @return isExternal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsExternal() {
    return isExternal;
  }


  public void setIsExternal(Boolean isExternal) {
    
    
    
    this.isExternal = isExternal;
  }


  public FileObjectProperty isPublic(Boolean isPublic) {
    
    
    
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    
    
    
    this.isPublic = isPublic;
  }


  public FileObjectProperty isStarred(Boolean isStarred) {
    
    
    
    
    this.isStarred = isStarred;
    return this;
  }

   /**
   * Get isStarred
   * @return isStarred
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsStarred() {
    return isStarred;
  }


  public void setIsStarred(Boolean isStarred) {
    
    
    
    this.isStarred = isStarred;
  }


  public FileObjectProperty isTombstoned(Boolean isTombstoned) {
    
    
    
    
    this.isTombstoned = isTombstoned;
    return this;
  }

   /**
   * Get isTombstoned
   * @return isTombstoned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTombstoned() {
    return isTombstoned;
  }


  public void setIsTombstoned(Boolean isTombstoned) {
    
    
    
    this.isTombstoned = isTombstoned;
  }


  public FileObjectProperty lastEditor(String lastEditor) {
    
    
    
    
    this.lastEditor = lastEditor;
    return this;
  }

   /**
   * Get lastEditor
   * @return lastEditor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastEditor() {
    return lastEditor;
  }


  public void setLastEditor(String lastEditor) {
    
    
    
    this.lastEditor = lastEditor;
  }


  public FileObjectProperty mimetype(String mimetype) {
    
    
    
    
    this.mimetype = mimetype;
    return this;
  }

   /**
   * Get mimetype
   * @return mimetype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMimetype() {
    return mimetype;
  }


  public void setMimetype(String mimetype) {
    
    
    
    this.mimetype = mimetype;
  }


  public FileObjectProperty mode(String mode) {
    
    
    
    
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMode() {
    return mode;
  }


  public void setMode(String mode) {
    
    
    
    this.mode = mode;
  }


  public FileObjectProperty name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public FileObjectProperty nonOwnerEditable(Boolean nonOwnerEditable) {
    
    
    
    
    this.nonOwnerEditable = nonOwnerEditable;
    return this;
  }

   /**
   * Get nonOwnerEditable
   * @return nonOwnerEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNonOwnerEditable() {
    return nonOwnerEditable;
  }


  public void setNonOwnerEditable(Boolean nonOwnerEditable) {
    
    
    
    this.nonOwnerEditable = nonOwnerEditable;
  }


  public FileObjectProperty numStars(Integer numStars) {
    
    
    
    
    this.numStars = numStars;
    return this;
  }

   /**
   * Get numStars
   * @return numStars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumStars() {
    return numStars;
  }


  public void setNumStars(Integer numStars) {
    
    
    
    this.numStars = numStars;
  }


  public FileObjectProperty originalH(Integer originalH) {
    
    
    
    
    this.originalH = originalH;
    return this;
  }

   /**
   * Get originalH
   * @return originalH
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalH() {
    return originalH;
  }


  public void setOriginalH(Integer originalH) {
    
    
    
    this.originalH = originalH;
  }


  public FileObjectProperty originalW(Integer originalW) {
    
    
    
    
    this.originalW = originalW;
    return this;
  }

   /**
   * Get originalW
   * @return originalW
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalW() {
    return originalW;
  }


  public void setOriginalW(Integer originalW) {
    
    
    
    this.originalW = originalW;
  }


  public FileObjectProperty permalink(URI permalink) {
    
    
    
    
    this.permalink = permalink;
    return this;
  }

   /**
   * Get permalink
   * @return permalink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getPermalink() {
    return permalink;
  }


  public void setPermalink(URI permalink) {
    
    
    
    this.permalink = permalink;
  }


  public FileObjectProperty permalinkPublic(URI permalinkPublic) {
    
    
    
    
    this.permalinkPublic = permalinkPublic;
    return this;
  }

   /**
   * Get permalinkPublic
   * @return permalinkPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getPermalinkPublic() {
    return permalinkPublic;
  }


  public void setPermalinkPublic(URI permalinkPublic) {
    
    
    
    this.permalinkPublic = permalinkPublic;
  }


  public FileObjectProperty pinnedInfo(Object pinnedInfo) {
    
    
    
    
    this.pinnedInfo = pinnedInfo;
    return this;
  }

   /**
   * Get pinnedInfo
   * @return pinnedInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPinnedInfo() {
    return pinnedInfo;
  }


  public void setPinnedInfo(Object pinnedInfo) {
    
    
    
    this.pinnedInfo = pinnedInfo;
  }


  public FileObjectProperty pinnedTo(List<String> pinnedTo) {
    
    
    
    
    this.pinnedTo = pinnedTo;
    return this;
  }

  public FileObjectProperty addPinnedToItem(String pinnedToItem) {
    if (this.pinnedTo == null) {
      this.pinnedTo = new ArrayList<>();
    }
    this.pinnedTo.add(pinnedToItem);
    return this;
  }

   /**
   * Get pinnedTo
   * @return pinnedTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPinnedTo() {
    return pinnedTo;
  }


  public void setPinnedTo(List<String> pinnedTo) {
    
    
    
    this.pinnedTo = pinnedTo;
  }


  public FileObjectProperty prettyType(String prettyType) {
    
    
    
    
    this.prettyType = prettyType;
    return this;
  }

   /**
   * Get prettyType
   * @return prettyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrettyType() {
    return prettyType;
  }


  public void setPrettyType(String prettyType) {
    
    
    
    this.prettyType = prettyType;
  }


  public FileObjectProperty preview(String preview) {
    
    
    
    
    this.preview = preview;
    return this;
  }

   /**
   * Get preview
   * @return preview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreview() {
    return preview;
  }


  public void setPreview(String preview) {
    
    
    
    this.preview = preview;
  }


  public FileObjectProperty publicUrlShared(Boolean publicUrlShared) {
    
    
    
    
    this.publicUrlShared = publicUrlShared;
    return this;
  }

   /**
   * Get publicUrlShared
   * @return publicUrlShared
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPublicUrlShared() {
    return publicUrlShared;
  }


  public void setPublicUrlShared(Boolean publicUrlShared) {
    
    
    
    this.publicUrlShared = publicUrlShared;
  }


  public FileObjectProperty reactions(List<ReactionObject> reactions) {
    
    
    
    
    this.reactions = reactions;
    return this;
  }

  public FileObjectProperty addReactionsItem(ReactionObject reactionsItem) {
    if (this.reactions == null) {
      this.reactions = new ArrayList<>();
    }
    this.reactions.add(reactionsItem);
    return this;
  }

   /**
   * Get reactions
   * @return reactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ReactionObject> getReactions() {
    return reactions;
  }


  public void setReactions(List<ReactionObject> reactions) {
    
    
    
    this.reactions = reactions;
  }


  public FileObjectProperty shares(ObjsFileShares shares) {
    
    
    
    
    this.shares = shares;
    return this;
  }

   /**
   * Get shares
   * @return shares
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjsFileShares getShares() {
    return shares;
  }


  public void setShares(ObjsFileShares shares) {
    
    
    
    this.shares = shares;
  }


  public FileObjectProperty size(Integer size) {
    
    
    
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    
    
    
    this.size = size;
  }


  public FileObjectProperty sourceTeam(String sourceTeam) {
    
    
    
    
    this.sourceTeam = sourceTeam;
    return this;
  }

   /**
   * Get sourceTeam
   * @return sourceTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSourceTeam() {
    return sourceTeam;
  }


  public void setSourceTeam(String sourceTeam) {
    
    
    
    this.sourceTeam = sourceTeam;
  }


  public FileObjectProperty state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public FileObjectProperty thumb1024(URI thumb1024) {
    
    
    
    
    this.thumb1024 = thumb1024;
    return this;
  }

   /**
   * Get thumb1024
   * @return thumb1024
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb1024() {
    return thumb1024;
  }


  public void setThumb1024(URI thumb1024) {
    
    
    
    this.thumb1024 = thumb1024;
  }


  public FileObjectProperty thumb1024H(Integer thumb1024H) {
    
    
    
    
    this.thumb1024H = thumb1024H;
    return this;
  }

   /**
   * Get thumb1024H
   * @return thumb1024H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb1024H() {
    return thumb1024H;
  }


  public void setThumb1024H(Integer thumb1024H) {
    
    
    
    this.thumb1024H = thumb1024H;
  }


  public FileObjectProperty thumb1024W(Integer thumb1024W) {
    
    
    
    
    this.thumb1024W = thumb1024W;
    return this;
  }

   /**
   * Get thumb1024W
   * @return thumb1024W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb1024W() {
    return thumb1024W;
  }


  public void setThumb1024W(Integer thumb1024W) {
    
    
    
    this.thumb1024W = thumb1024W;
  }


  public FileObjectProperty thumb160(URI thumb160) {
    
    
    
    
    this.thumb160 = thumb160;
    return this;
  }

   /**
   * Get thumb160
   * @return thumb160
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb160() {
    return thumb160;
  }


  public void setThumb160(URI thumb160) {
    
    
    
    this.thumb160 = thumb160;
  }


  public FileObjectProperty thumb360(URI thumb360) {
    
    
    
    
    this.thumb360 = thumb360;
    return this;
  }

   /**
   * Get thumb360
   * @return thumb360
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb360() {
    return thumb360;
  }


  public void setThumb360(URI thumb360) {
    
    
    
    this.thumb360 = thumb360;
  }


  public FileObjectProperty thumb360H(Integer thumb360H) {
    
    
    
    
    this.thumb360H = thumb360H;
    return this;
  }

   /**
   * Get thumb360H
   * @return thumb360H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb360H() {
    return thumb360H;
  }


  public void setThumb360H(Integer thumb360H) {
    
    
    
    this.thumb360H = thumb360H;
  }


  public FileObjectProperty thumb360W(Integer thumb360W) {
    
    
    
    
    this.thumb360W = thumb360W;
    return this;
  }

   /**
   * Get thumb360W
   * @return thumb360W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb360W() {
    return thumb360W;
  }


  public void setThumb360W(Integer thumb360W) {
    
    
    
    this.thumb360W = thumb360W;
  }


  public FileObjectProperty thumb480(URI thumb480) {
    
    
    
    
    this.thumb480 = thumb480;
    return this;
  }

   /**
   * Get thumb480
   * @return thumb480
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb480() {
    return thumb480;
  }


  public void setThumb480(URI thumb480) {
    
    
    
    this.thumb480 = thumb480;
  }


  public FileObjectProperty thumb480H(Integer thumb480H) {
    
    
    
    
    this.thumb480H = thumb480H;
    return this;
  }

   /**
   * Get thumb480H
   * @return thumb480H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb480H() {
    return thumb480H;
  }


  public void setThumb480H(Integer thumb480H) {
    
    
    
    this.thumb480H = thumb480H;
  }


  public FileObjectProperty thumb480W(Integer thumb480W) {
    
    
    
    
    this.thumb480W = thumb480W;
    return this;
  }

   /**
   * Get thumb480W
   * @return thumb480W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb480W() {
    return thumb480W;
  }


  public void setThumb480W(Integer thumb480W) {
    
    
    
    this.thumb480W = thumb480W;
  }


  public FileObjectProperty thumb64(URI thumb64) {
    
    
    
    
    this.thumb64 = thumb64;
    return this;
  }

   /**
   * Get thumb64
   * @return thumb64
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb64() {
    return thumb64;
  }


  public void setThumb64(URI thumb64) {
    
    
    
    this.thumb64 = thumb64;
  }


  public FileObjectProperty thumb720(URI thumb720) {
    
    
    
    
    this.thumb720 = thumb720;
    return this;
  }

   /**
   * Get thumb720
   * @return thumb720
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb720() {
    return thumb720;
  }


  public void setThumb720(URI thumb720) {
    
    
    
    this.thumb720 = thumb720;
  }


  public FileObjectProperty thumb720H(Integer thumb720H) {
    
    
    
    
    this.thumb720H = thumb720H;
    return this;
  }

   /**
   * Get thumb720H
   * @return thumb720H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb720H() {
    return thumb720H;
  }


  public void setThumb720H(Integer thumb720H) {
    
    
    
    this.thumb720H = thumb720H;
  }


  public FileObjectProperty thumb720W(Integer thumb720W) {
    
    
    
    
    this.thumb720W = thumb720W;
    return this;
  }

   /**
   * Get thumb720W
   * @return thumb720W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb720W() {
    return thumb720W;
  }


  public void setThumb720W(Integer thumb720W) {
    
    
    
    this.thumb720W = thumb720W;
  }


  public FileObjectProperty thumb80(URI thumb80) {
    
    
    
    
    this.thumb80 = thumb80;
    return this;
  }

   /**
   * Get thumb80
   * @return thumb80
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb80() {
    return thumb80;
  }


  public void setThumb80(URI thumb80) {
    
    
    
    this.thumb80 = thumb80;
  }


  public FileObjectProperty thumb800(URI thumb800) {
    
    
    
    
    this.thumb800 = thumb800;
    return this;
  }

   /**
   * Get thumb800
   * @return thumb800
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb800() {
    return thumb800;
  }


  public void setThumb800(URI thumb800) {
    
    
    
    this.thumb800 = thumb800;
  }


  public FileObjectProperty thumb800H(Integer thumb800H) {
    
    
    
    
    this.thumb800H = thumb800H;
    return this;
  }

   /**
   * Get thumb800H
   * @return thumb800H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb800H() {
    return thumb800H;
  }


  public void setThumb800H(Integer thumb800H) {
    
    
    
    this.thumb800H = thumb800H;
  }


  public FileObjectProperty thumb800W(Integer thumb800W) {
    
    
    
    
    this.thumb800W = thumb800W;
    return this;
  }

   /**
   * Get thumb800W
   * @return thumb800W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb800W() {
    return thumb800W;
  }


  public void setThumb800W(Integer thumb800W) {
    
    
    
    this.thumb800W = thumb800W;
  }


  public FileObjectProperty thumb960(URI thumb960) {
    
    
    
    
    this.thumb960 = thumb960;
    return this;
  }

   /**
   * Get thumb960
   * @return thumb960
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getThumb960() {
    return thumb960;
  }


  public void setThumb960(URI thumb960) {
    
    
    
    this.thumb960 = thumb960;
  }


  public FileObjectProperty thumb960H(Integer thumb960H) {
    
    
    
    
    this.thumb960H = thumb960H;
    return this;
  }

   /**
   * Get thumb960H
   * @return thumb960H
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb960H() {
    return thumb960H;
  }


  public void setThumb960H(Integer thumb960H) {
    
    
    
    this.thumb960H = thumb960H;
  }


  public FileObjectProperty thumb960W(Integer thumb960W) {
    
    
    
    
    this.thumb960W = thumb960W;
    return this;
  }

   /**
   * Get thumb960W
   * @return thumb960W
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getThumb960W() {
    return thumb960W;
  }


  public void setThumb960W(Integer thumb960W) {
    
    
    
    this.thumb960W = thumb960W;
  }


  public FileObjectProperty thumbTiny(String thumbTiny) {
    
    
    
    
    this.thumbTiny = thumbTiny;
    return this;
  }

   /**
   * Get thumbTiny
   * @return thumbTiny
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThumbTiny() {
    return thumbTiny;
  }


  public void setThumbTiny(String thumbTiny) {
    
    
    
    this.thumbTiny = thumbTiny;
  }


  public FileObjectProperty timestamp(Integer timestamp) {
    
    
    
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(Integer timestamp) {
    
    
    
    this.timestamp = timestamp;
  }


  public FileObjectProperty updated(Integer updated) {
    
    
    
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUpdated() {
    return updated;
  }


  public void setUpdated(Integer updated) {
    
    
    
    this.updated = updated;
  }


  public FileObjectProperty urlPrivate(URI urlPrivate) {
    
    
    
    
    this.urlPrivate = urlPrivate;
    return this;
  }

   /**
   * Get urlPrivate
   * @return urlPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getUrlPrivate() {
    return urlPrivate;
  }


  public void setUrlPrivate(URI urlPrivate) {
    
    
    
    this.urlPrivate = urlPrivate;
  }


  public FileObjectProperty urlPrivateDownload(URI urlPrivateDownload) {
    
    
    
    
    this.urlPrivateDownload = urlPrivateDownload;
    return this;
  }

   /**
   * Get urlPrivateDownload
   * @return urlPrivateDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getUrlPrivateDownload() {
    return urlPrivateDownload;
  }


  public void setUrlPrivateDownload(URI urlPrivateDownload) {
    
    
    
    this.urlPrivateDownload = urlPrivateDownload;
  }


  public FileObjectProperty user(String user) {
    
    
    
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    
    
    
    this.user = user;
  }


  public FileObjectProperty userTeam(String userTeam) {
    
    
    
    
    this.userTeam = userTeam;
    return this;
  }

   /**
   * Get userTeam
   * @return userTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserTeam() {
    return userTeam;
  }


  public void setUserTeam(String userTeam) {
    
    
    
    this.userTeam = userTeam;
  }


  public FileObjectProperty username(String username) {
    
    
    
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    
    
    
    this.username = username;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FileObjectProperty instance itself
   */
  public FileObjectProperty putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileObjectProperty fileObjectProperty = (FileObjectProperty) o;
    return Objects.equals(this.title, fileObjectProperty.title) &&
        Objects.equals(this.channels, fileObjectProperty.channels) &&
        Objects.equals(this.commentsCount, fileObjectProperty.commentsCount) &&
        Objects.equals(this.created, fileObjectProperty.created) &&
        Objects.equals(this.dateDelete, fileObjectProperty.dateDelete) &&
        Objects.equals(this.displayAsBot, fileObjectProperty.displayAsBot) &&
        Objects.equals(this.editable, fileObjectProperty.editable) &&
        Objects.equals(this.editor, fileObjectProperty.editor) &&
        Objects.equals(this.externalId, fileObjectProperty.externalId) &&
        Objects.equals(this.externalType, fileObjectProperty.externalType) &&
        Objects.equals(this.externalUrl, fileObjectProperty.externalUrl) &&
        Objects.equals(this.filetype, fileObjectProperty.filetype) &&
        Objects.equals(this.groups, fileObjectProperty.groups) &&
        Objects.equals(this.hasRichPreview, fileObjectProperty.hasRichPreview) &&
        Objects.equals(this.id, fileObjectProperty.id) &&
        Objects.equals(this.imageExifRotation, fileObjectProperty.imageExifRotation) &&
        Objects.equals(this.ims, fileObjectProperty.ims) &&
        Objects.equals(this.isExternal, fileObjectProperty.isExternal) &&
        Objects.equals(this.isPublic, fileObjectProperty.isPublic) &&
        Objects.equals(this.isStarred, fileObjectProperty.isStarred) &&
        Objects.equals(this.isTombstoned, fileObjectProperty.isTombstoned) &&
        Objects.equals(this.lastEditor, fileObjectProperty.lastEditor) &&
        Objects.equals(this.mimetype, fileObjectProperty.mimetype) &&
        Objects.equals(this.mode, fileObjectProperty.mode) &&
        Objects.equals(this.name, fileObjectProperty.name) &&
        Objects.equals(this.nonOwnerEditable, fileObjectProperty.nonOwnerEditable) &&
        Objects.equals(this.numStars, fileObjectProperty.numStars) &&
        Objects.equals(this.originalH, fileObjectProperty.originalH) &&
        Objects.equals(this.originalW, fileObjectProperty.originalW) &&
        Objects.equals(this.permalink, fileObjectProperty.permalink) &&
        Objects.equals(this.permalinkPublic, fileObjectProperty.permalinkPublic) &&
        Objects.equals(this.pinnedInfo, fileObjectProperty.pinnedInfo) &&
        Objects.equals(this.pinnedTo, fileObjectProperty.pinnedTo) &&
        Objects.equals(this.prettyType, fileObjectProperty.prettyType) &&
        Objects.equals(this.preview, fileObjectProperty.preview) &&
        Objects.equals(this.publicUrlShared, fileObjectProperty.publicUrlShared) &&
        Objects.equals(this.reactions, fileObjectProperty.reactions) &&
        Objects.equals(this.shares, fileObjectProperty.shares) &&
        Objects.equals(this.size, fileObjectProperty.size) &&
        Objects.equals(this.sourceTeam, fileObjectProperty.sourceTeam) &&
        Objects.equals(this.state, fileObjectProperty.state) &&
        Objects.equals(this.thumb1024, fileObjectProperty.thumb1024) &&
        Objects.equals(this.thumb1024H, fileObjectProperty.thumb1024H) &&
        Objects.equals(this.thumb1024W, fileObjectProperty.thumb1024W) &&
        Objects.equals(this.thumb160, fileObjectProperty.thumb160) &&
        Objects.equals(this.thumb360, fileObjectProperty.thumb360) &&
        Objects.equals(this.thumb360H, fileObjectProperty.thumb360H) &&
        Objects.equals(this.thumb360W, fileObjectProperty.thumb360W) &&
        Objects.equals(this.thumb480, fileObjectProperty.thumb480) &&
        Objects.equals(this.thumb480H, fileObjectProperty.thumb480H) &&
        Objects.equals(this.thumb480W, fileObjectProperty.thumb480W) &&
        Objects.equals(this.thumb64, fileObjectProperty.thumb64) &&
        Objects.equals(this.thumb720, fileObjectProperty.thumb720) &&
        Objects.equals(this.thumb720H, fileObjectProperty.thumb720H) &&
        Objects.equals(this.thumb720W, fileObjectProperty.thumb720W) &&
        Objects.equals(this.thumb80, fileObjectProperty.thumb80) &&
        Objects.equals(this.thumb800, fileObjectProperty.thumb800) &&
        Objects.equals(this.thumb800H, fileObjectProperty.thumb800H) &&
        Objects.equals(this.thumb800W, fileObjectProperty.thumb800W) &&
        Objects.equals(this.thumb960, fileObjectProperty.thumb960) &&
        Objects.equals(this.thumb960H, fileObjectProperty.thumb960H) &&
        Objects.equals(this.thumb960W, fileObjectProperty.thumb960W) &&
        Objects.equals(this.thumbTiny, fileObjectProperty.thumbTiny) &&
        Objects.equals(this.timestamp, fileObjectProperty.timestamp) &&
        Objects.equals(this.updated, fileObjectProperty.updated) &&
        Objects.equals(this.urlPrivate, fileObjectProperty.urlPrivate) &&
        Objects.equals(this.urlPrivateDownload, fileObjectProperty.urlPrivateDownload) &&
        Objects.equals(this.user, fileObjectProperty.user) &&
        Objects.equals(this.userTeam, fileObjectProperty.userTeam) &&
        Objects.equals(this.username, fileObjectProperty.username)&&
        Objects.equals(this.additionalProperties, fileObjectProperty.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, channels, commentsCount, created, dateDelete, displayAsBot, editable, editor, externalId, externalType, externalUrl, filetype, groups, hasRichPreview, id, imageExifRotation, ims, isExternal, isPublic, isStarred, isTombstoned, lastEditor, mimetype, mode, name, nonOwnerEditable, numStars, originalH, originalW, permalink, permalinkPublic, pinnedInfo, pinnedTo, prettyType, preview, publicUrlShared, reactions, shares, size, sourceTeam, state, thumb1024, thumb1024H, thumb1024W, thumb160, thumb360, thumb360H, thumb360W, thumb480, thumb480H, thumb480W, thumb64, thumb720, thumb720H, thumb720W, thumb80, thumb800, thumb800H, thumb800W, thumb960, thumb960H, thumb960W, thumbTiny, timestamp, updated, urlPrivate, urlPrivateDownload, user, userTeam, username, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileObjectProperty {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    commentsCount: ").append(toIndentedString(commentsCount)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    dateDelete: ").append(toIndentedString(dateDelete)).append("\n");
    sb.append("    displayAsBot: ").append(toIndentedString(displayAsBot)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    editor: ").append(toIndentedString(editor)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    externalType: ").append(toIndentedString(externalType)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    filetype: ").append(toIndentedString(filetype)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    hasRichPreview: ").append(toIndentedString(hasRichPreview)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageExifRotation: ").append(toIndentedString(imageExifRotation)).append("\n");
    sb.append("    ims: ").append(toIndentedString(ims)).append("\n");
    sb.append("    isExternal: ").append(toIndentedString(isExternal)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isStarred: ").append(toIndentedString(isStarred)).append("\n");
    sb.append("    isTombstoned: ").append(toIndentedString(isTombstoned)).append("\n");
    sb.append("    lastEditor: ").append(toIndentedString(lastEditor)).append("\n");
    sb.append("    mimetype: ").append(toIndentedString(mimetype)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nonOwnerEditable: ").append(toIndentedString(nonOwnerEditable)).append("\n");
    sb.append("    numStars: ").append(toIndentedString(numStars)).append("\n");
    sb.append("    originalH: ").append(toIndentedString(originalH)).append("\n");
    sb.append("    originalW: ").append(toIndentedString(originalW)).append("\n");
    sb.append("    permalink: ").append(toIndentedString(permalink)).append("\n");
    sb.append("    permalinkPublic: ").append(toIndentedString(permalinkPublic)).append("\n");
    sb.append("    pinnedInfo: ").append(toIndentedString(pinnedInfo)).append("\n");
    sb.append("    pinnedTo: ").append(toIndentedString(pinnedTo)).append("\n");
    sb.append("    prettyType: ").append(toIndentedString(prettyType)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("    publicUrlShared: ").append(toIndentedString(publicUrlShared)).append("\n");
    sb.append("    reactions: ").append(toIndentedString(reactions)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sourceTeam: ").append(toIndentedString(sourceTeam)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    thumb1024: ").append(toIndentedString(thumb1024)).append("\n");
    sb.append("    thumb1024H: ").append(toIndentedString(thumb1024H)).append("\n");
    sb.append("    thumb1024W: ").append(toIndentedString(thumb1024W)).append("\n");
    sb.append("    thumb160: ").append(toIndentedString(thumb160)).append("\n");
    sb.append("    thumb360: ").append(toIndentedString(thumb360)).append("\n");
    sb.append("    thumb360H: ").append(toIndentedString(thumb360H)).append("\n");
    sb.append("    thumb360W: ").append(toIndentedString(thumb360W)).append("\n");
    sb.append("    thumb480: ").append(toIndentedString(thumb480)).append("\n");
    sb.append("    thumb480H: ").append(toIndentedString(thumb480H)).append("\n");
    sb.append("    thumb480W: ").append(toIndentedString(thumb480W)).append("\n");
    sb.append("    thumb64: ").append(toIndentedString(thumb64)).append("\n");
    sb.append("    thumb720: ").append(toIndentedString(thumb720)).append("\n");
    sb.append("    thumb720H: ").append(toIndentedString(thumb720H)).append("\n");
    sb.append("    thumb720W: ").append(toIndentedString(thumb720W)).append("\n");
    sb.append("    thumb80: ").append(toIndentedString(thumb80)).append("\n");
    sb.append("    thumb800: ").append(toIndentedString(thumb800)).append("\n");
    sb.append("    thumb800H: ").append(toIndentedString(thumb800H)).append("\n");
    sb.append("    thumb800W: ").append(toIndentedString(thumb800W)).append("\n");
    sb.append("    thumb960: ").append(toIndentedString(thumb960)).append("\n");
    sb.append("    thumb960H: ").append(toIndentedString(thumb960H)).append("\n");
    sb.append("    thumb960W: ").append(toIndentedString(thumb960W)).append("\n");
    sb.append("    thumbTiny: ").append(toIndentedString(thumbTiny)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    urlPrivate: ").append(toIndentedString(urlPrivate)).append("\n");
    sb.append("    urlPrivateDownload: ").append(toIndentedString(urlPrivateDownload)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userTeam: ").append(toIndentedString(userTeam)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("channels");
    openapiFields.add("comments_count");
    openapiFields.add("created");
    openapiFields.add("date_delete");
    openapiFields.add("display_as_bot");
    openapiFields.add("editable");
    openapiFields.add("editor");
    openapiFields.add("external_id");
    openapiFields.add("external_type");
    openapiFields.add("external_url");
    openapiFields.add("filetype");
    openapiFields.add("groups");
    openapiFields.add("has_rich_preview");
    openapiFields.add("id");
    openapiFields.add("image_exif_rotation");
    openapiFields.add("ims");
    openapiFields.add("is_external");
    openapiFields.add("is_public");
    openapiFields.add("is_starred");
    openapiFields.add("is_tombstoned");
    openapiFields.add("last_editor");
    openapiFields.add("mimetype");
    openapiFields.add("mode");
    openapiFields.add("name");
    openapiFields.add("non_owner_editable");
    openapiFields.add("num_stars");
    openapiFields.add("original_h");
    openapiFields.add("original_w");
    openapiFields.add("permalink");
    openapiFields.add("permalink_public");
    openapiFields.add("pinned_info");
    openapiFields.add("pinned_to");
    openapiFields.add("pretty_type");
    openapiFields.add("preview");
    openapiFields.add("public_url_shared");
    openapiFields.add("reactions");
    openapiFields.add("shares");
    openapiFields.add("size");
    openapiFields.add("source_team");
    openapiFields.add("state");
    openapiFields.add("thumb_1024");
    openapiFields.add("thumb_1024_h");
    openapiFields.add("thumb_1024_w");
    openapiFields.add("thumb_160");
    openapiFields.add("thumb_360");
    openapiFields.add("thumb_360_h");
    openapiFields.add("thumb_360_w");
    openapiFields.add("thumb_480");
    openapiFields.add("thumb_480_h");
    openapiFields.add("thumb_480_w");
    openapiFields.add("thumb_64");
    openapiFields.add("thumb_720");
    openapiFields.add("thumb_720_h");
    openapiFields.add("thumb_720_w");
    openapiFields.add("thumb_80");
    openapiFields.add("thumb_800");
    openapiFields.add("thumb_800_h");
    openapiFields.add("thumb_800_w");
    openapiFields.add("thumb_960");
    openapiFields.add("thumb_960_h");
    openapiFields.add("thumb_960_w");
    openapiFields.add("thumb_tiny");
    openapiFields.add("timestamp");
    openapiFields.add("updated");
    openapiFields.add("url_private");
    openapiFields.add("url_private_download");
    openapiFields.add("user");
    openapiFields.add("user_team");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FileObjectProperty
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FileObjectProperty.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FileObjectProperty is not found in the empty JSON string", FileObjectProperty.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("channels") != null && !jsonObj.get("channels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `channels` to be an array in the JSON string but got `%s`", jsonObj.get("channels").toString()));
      }
      if ((jsonObj.get("editor") != null && !jsonObj.get("editor").isJsonNull()) && !jsonObj.get("editor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `editor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("editor").toString()));
      }
      if ((jsonObj.get("external_id") != null && !jsonObj.get("external_id").isJsonNull()) && !jsonObj.get("external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_id").toString()));
      }
      if ((jsonObj.get("external_type") != null && !jsonObj.get("external_type").isJsonNull()) && !jsonObj.get("external_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_type").toString()));
      }
      if ((jsonObj.get("external_url") != null && !jsonObj.get("external_url").isJsonNull()) && !jsonObj.get("external_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_url").toString()));
      }
      if ((jsonObj.get("filetype") != null && !jsonObj.get("filetype").isJsonNull()) && !jsonObj.get("filetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filetype").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ims") != null && !jsonObj.get("ims").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ims` to be an array in the JSON string but got `%s`", jsonObj.get("ims").toString()));
      }
      if ((jsonObj.get("last_editor") != null && !jsonObj.get("last_editor").isJsonNull()) && !jsonObj.get("last_editor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_editor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_editor").toString()));
      }
      if ((jsonObj.get("mimetype") != null && !jsonObj.get("mimetype").isJsonNull()) && !jsonObj.get("mimetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mimetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mimetype").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("permalink") != null && !jsonObj.get("permalink").isJsonNull()) && !jsonObj.get("permalink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permalink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permalink").toString()));
      }
      if ((jsonObj.get("permalink_public") != null && !jsonObj.get("permalink_public").isJsonNull()) && !jsonObj.get("permalink_public").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permalink_public` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permalink_public").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pinned_to") != null && !jsonObj.get("pinned_to").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pinned_to` to be an array in the JSON string but got `%s`", jsonObj.get("pinned_to").toString()));
      }
      if ((jsonObj.get("pretty_type") != null && !jsonObj.get("pretty_type").isJsonNull()) && !jsonObj.get("pretty_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pretty_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pretty_type").toString()));
      }
      if ((jsonObj.get("preview") != null && !jsonObj.get("preview").isJsonNull()) && !jsonObj.get("preview").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preview` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preview").toString()));
      }
      if (jsonObj.get("reactions") != null && !jsonObj.get("reactions").isJsonNull()) {
        JsonArray jsonArrayreactions = jsonObj.getAsJsonArray("reactions");
        if (jsonArrayreactions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reactions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reactions` to be an array in the JSON string but got `%s`", jsonObj.get("reactions").toString()));
          }

          // validate the optional field `reactions` (array)
          for (int i = 0; i < jsonArrayreactions.size(); i++) {
            ReactionObject.validateJsonObject(jsonArrayreactions.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `shares`
      if (jsonObj.get("shares") != null && !jsonObj.get("shares").isJsonNull()) {
        ObjsFileShares.validateJsonObject(jsonObj.getAsJsonObject("shares"));
      }
      if ((jsonObj.get("source_team") != null && !jsonObj.get("source_team").isJsonNull()) && !jsonObj.get("source_team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_team").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("thumb_1024") != null && !jsonObj.get("thumb_1024").isJsonNull()) && !jsonObj.get("thumb_1024").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_1024` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_1024").toString()));
      }
      if ((jsonObj.get("thumb_160") != null && !jsonObj.get("thumb_160").isJsonNull()) && !jsonObj.get("thumb_160").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_160` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_160").toString()));
      }
      if ((jsonObj.get("thumb_360") != null && !jsonObj.get("thumb_360").isJsonNull()) && !jsonObj.get("thumb_360").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_360` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_360").toString()));
      }
      if ((jsonObj.get("thumb_480") != null && !jsonObj.get("thumb_480").isJsonNull()) && !jsonObj.get("thumb_480").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_480` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_480").toString()));
      }
      if ((jsonObj.get("thumb_64") != null && !jsonObj.get("thumb_64").isJsonNull()) && !jsonObj.get("thumb_64").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_64` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_64").toString()));
      }
      if ((jsonObj.get("thumb_720") != null && !jsonObj.get("thumb_720").isJsonNull()) && !jsonObj.get("thumb_720").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_720` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_720").toString()));
      }
      if ((jsonObj.get("thumb_80") != null && !jsonObj.get("thumb_80").isJsonNull()) && !jsonObj.get("thumb_80").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_80` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_80").toString()));
      }
      if ((jsonObj.get("thumb_800") != null && !jsonObj.get("thumb_800").isJsonNull()) && !jsonObj.get("thumb_800").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_800` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_800").toString()));
      }
      if ((jsonObj.get("thumb_960") != null && !jsonObj.get("thumb_960").isJsonNull()) && !jsonObj.get("thumb_960").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_960` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_960").toString()));
      }
      if ((jsonObj.get("thumb_tiny") != null && !jsonObj.get("thumb_tiny").isJsonNull()) && !jsonObj.get("thumb_tiny").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumb_tiny` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumb_tiny").toString()));
      }
      if ((jsonObj.get("url_private") != null && !jsonObj.get("url_private").isJsonNull()) && !jsonObj.get("url_private").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url_private` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url_private").toString()));
      }
      if ((jsonObj.get("url_private_download") != null && !jsonObj.get("url_private_download").isJsonNull()) && !jsonObj.get("url_private_download").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url_private_download` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url_private_download").toString()));
      }
      if ((jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) && !jsonObj.get("user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user").toString()));
      }
      if ((jsonObj.get("user_team") != null && !jsonObj.get("user_team").isJsonNull()) && !jsonObj.get("user_team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_team").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FileObjectProperty.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FileObjectProperty' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FileObjectProperty> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FileObjectProperty.class));

       return (TypeAdapter<T>) new TypeAdapter<FileObjectProperty>() {
           @Override
           public void write(JsonWriter out, FileObjectProperty value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FileObjectProperty read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FileObjectProperty instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FileObjectProperty given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FileObjectProperty
  * @throws IOException if the JSON string is invalid with respect to FileObjectProperty
  */
  public static FileObjectProperty fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FileObjectProperty.class);
  }

 /**
  * Convert an instance of FileObjectProperty to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

